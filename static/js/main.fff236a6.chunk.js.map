{"version":3,"sources":["store/favorites-context.js","Components/Home/Home.js","Components/Details/PlayDetails.js","Components/Details/PlayCharacters.js","Components/Details/PlayText.js","Components/Details/TextFilterScenes.js","Components/Details/TextFilter.js","Components/Details/PlayDetailsMain.js","Components/Default/ListOfPlays.js","Components/Default/SortPlays.js","Components/Default/DefaultView.js","Components/FavoritesBar.js","About.js","Components/Header.js","Components/Default/SinglePlay.js","App.js","index.js"],"names":["FavoritesContext","createContext","favorites","addFavorite","favoriteClicked","deleteFavorite","playId","playIsFavorite","FavoritesContextProvider","props","useState","favoritesList","setFavoritesList","context","prevFavoritesList","concat","filter","p","id","some","Provider","value","children","Home","userTitle","React","createRef","event","target","this","onUpdateTitle","toLowerCase","localStorage","console","log","className","src","alt","style","height","zIndex","marginTop","marginLeft","width","border","padding","borderRadius","type","name","onChange","handleChange","bind","to","Component","PlayDetails","play","likelyDate","genre","wiki","gutenberg","shakespeareOrg","desc","PlayCharacters","player","PlayText","speeches","speech","class","speaker","lines","map","line","scenes","s","title","stageDirection","scene","TextFilterScenes","act","TextFilter","acts","find","a","PlayDetailsMain","playClicked","playDetails","setPlayDetails","useEffect","localPlaysDetails","getItem","JSON","parse","filename","fetch","then","res","json","result","setItem","stringify","error","alert","detailsToShow","setDetailsToShow","synopsis","onClick","persona","ListOfPlays","setviewDetails","favContext","useContext","playIsFav","aPlay","toggleFavoriteStatus","handleViewClick","showDetail","fav","margin","SortPlays","list","plays","tempList","startYear","endYear","yearCond","howToSort","setHowToSort","filterYearChange","betweenYears","filteredYear","push","afterYear","beforeYear","position","placeholder","titleSort","sort","b","sortByTitle","dateSort","SortByDate","genreSort","sortByGenre","DefaultView","FavoritesBar","content","length","color","About","hideModal","sethideModal","toggleModalHandler","Header","state","isOpen","role","setState","footer","onOutsideClick","SinglePlay","viewDetails","setViewSingle","single","thePlay","App","isLoaded","items","singlePlay","localeCompare","testResult","message","path","element","exact","singlePlayIndex","findIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fff236a6.chunk.js","sourcesContent":["import { Children, createContext, useState } from \"react\";\r\n\r\nconst FavoritesContext = createContext({\r\n  favorites: [],\r\n  addFavorite: (favoriteClicked) => {},\r\n  deleteFavorite: (playId) => {},\r\n  playIsFavorite: (playId) => {},\r\n});\r\n\r\nexport function FavoritesContextProvider(props) {\r\n  const [favoritesList, setFavoritesList] = useState([]);\r\n\r\n  function addFavoriteHandler(favoriteClicked) {\r\n    setFavoritesList((prevFavoritesList) => {\r\n      return prevFavoritesList.concat(favoriteClicked);\r\n    });\r\n  }\r\n\r\n  function deleteFavoriteHandler(playId) {\r\n    setFavoritesList((prevFavoritesList) => {\r\n      return prevFavoritesList.filter((p) => p.id !== playId);\r\n    });\r\n  }\r\n\r\n  function playIsFavoritesHandler(playId) {\r\n    //Helper function, may not need it\r\n    return favoritesList.some((p) => p.id === playId);\r\n  }\r\n\r\n  const context = {\r\n    favorites: favoritesList,\r\n    addFavorite: addFavoriteHandler,\r\n    deleteFavorite: deleteFavoriteHandler,\r\n    playIsFavorite: playIsFavoritesHandler,\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={context}>\r\n      {props.children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default FavoritesContext;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * The main starting page - home - for the application\r\n */\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.userTitle = React.createRef();\r\n  }\r\n  handleChange(event) {\r\n    if (event.target.value !== \"\") {\r\n      this.props.onUpdateTitle(event.target.value.toLowerCase());\r\n    }\r\n  }\r\n\r\n  handleSubmit() {\r\n    if (localStorage === null) console.log(\"its empty\");\r\n    else console.log(\"its loaded\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          className=\"hero\"\r\n          src=\"https://i.pinimg.com/originals/26/b6/14/26b61432fcd570e451e21fc46c17242b.jpg\"\r\n          alt=\"hero\"\r\n          style={{ height: \"auto\", zIndex: \"-1\" }}\r\n        />\r\n        <div\r\n          className=\"block\"\r\n          style={{\r\n            marginTop: \"-25%\",\r\n            marginLeft: \"25%\",\r\n            width: \"50%\",\r\n            border: \"3px solid green\",\r\n            padding: \"10px\",\r\n            borderRadius: \"1em\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          <label>\r\n            Title\r\n            <input\r\n              className=\"input is-primary\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n            <Link to=\"/singlePlay\">\r\n              <input\r\n                className=\"input is-primary\"\r\n                type=\"button\"\r\n                value=\"Find this Play\"\r\n              />\r\n            </Link>\r\n          </label>\r\n          <Link to=\"/default\">\r\n            <input\r\n              className=\"input is-primary\"\r\n              type=\"submit\"\r\n              value=\"Show me all plays\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// import { render } from \"react-dom\";\r\n\r\n/**\r\n* Details information page generator\r\n*/\r\nconst PlayDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <p>{props.play.likelyDate}</p>\r\n      <p>{props.play.genre}</p>\r\n      <p>{props.play.wiki}</p>\r\n      <p>{props.play.gutenberg}</p>\r\n      <p>{props.play.shakespeareOrg}</p>\r\n      <p>{props.play.desc}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayDetails;\r\n","// import { render } from \"react-dom\";\r\n\r\n/**\r\n* Prints the characters found in the play\r\n*/\r\nconst PlayCharacters = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <p>Character: { props.player }</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayCharacters;\r\n","// import { render } from \"react-dom\";\r\nimport './playText.css';\r\n\r\n/**\r\n* Prints all the scenes, speeches, lines, and acts\r\n*/\r\nconst PlayText = (props) => {\r\n\r\n  const scene = (s) => {\r\n    return (\r\n      // <span>\r\n      //   <h5>{s.name}: {s.title}</h5>\r\n      //   <h5>{s.stageDirection}</h5>\r\n      //   <span>{s.speeches.map( (speech) => speeches(speech) )}</span>\r\n      // </span>\r\n\r\n        <div id=\"sceneHere\">\r\n          <h4>{s.name}</h4>\r\n          <p class=\"title\">{s.title}</p>\r\n          <p class=\"direction\">{s.stageDirection}</p>\r\n          {s.speeches.map( (speech) => speeches(speech) )}\r\n        </div>\r\n    )\r\n  }\r\n\r\n  const speeches = (speech) => {\r\n    return (\r\n      <div class=\"speech\">\r\n        <span>{speech.speaker}</span>\r\n        {speech.lines.map( (line) => lines(line) )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const lines = (line) => {\r\n    return (\r\n      <p>{line}</p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section class=\"playTextSection\">\r\n      <aside>\r\n        <select id=\"actList\"></select>\r\n      </aside>\r\n\r\n      <article id=\"actHere\">\r\n        <h3>{ props.play.name }</h3>\r\n        {props.play.scenes.map( (s) => scene(s) )}\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlayText;\r\n","import React from \"react\";\r\n\r\n/**\r\n* Prints out individual Shakespeare scenes\r\n*/\r\nconst TextFilterScenes = (props) => {\r\n\r\n  return (\r\n    <select id=\"sceneList\">\r\n        {props.act.scenes.map((s) => <option value={s.name} >{s.name}</option>)}\r\n    </select>\r\n  )\r\n\r\n}\r\n\r\nexport default TextFilterScenes;\r\n","import React from \"react\";\r\nimport TextFilterScenes from \"./TextFilterScenes\";\r\n\r\nconst TextFilter = (props) => {\r\n  let act;\r\n\r\n  const handleSelection = (name) => {\r\n    act = props.play.acts.find((a) => a.name === name);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <fieldset id=\"interface\">\r\n        <select id=\"actList\">\r\n          {props.play.acts.map((p) => <option onChange={handleSelection(p.name)} value={p.name} >{p.name}</option>)}\r\n        </select>\r\n          <TextFilterScenes act={act}></TextFilterScenes>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextFilter;","import React, { useEffect } from \"react\";\r\nimport PlayDetails from \"./PlayDetails\";\r\nimport PlayCharacters from \"./PlayCharacters\";\r\nimport PlayText from \"./PlayText\";\r\nimport \"./playText.css\";\r\nimport TextFilter from \"./TextFilter\";\r\n\r\n/**\r\n* Details source page, everything detail is printed here\r\n*/\r\nconst PlayDetailsMain = (props) => {\r\n  //Testing vars. Change when view play is set up\r\n  console.log(\"Play passed into detail!\");\r\n  console.log(props.playClicked);\r\n  // let playDetails;\r\n  // let localPlaysDetails = [JSON.parse(localStorage.getItem(\"playsDetails\"))];\r\n  const [playDetails, setPlayDetails] = React.useState(null);\r\n\r\nuseEffect(() => {\r\n    let localPlaysDetails;\r\n\r\n    if (localStorage.getItem(\"playsDetails\") !== null) {\r\n      localPlaysDetails = [JSON.parse(localStorage.getItem(\"playsDetails\"))];\r\n    }\r\n    \r\n    if (props.playClicked.filename !== \"\") {\r\n      //If not checks if the play does have additional details\r\n      fetch(\r\n        \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + props.playClicked.id\r\n      )\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log (result);\r\n            localStorage.setItem(\"playsDetails\", JSON.stringify(result));\r\n            setPlayDetails(result);\r\n          },\r\n          (error) => {\r\n            alert(\"Error fetching data\");\r\n          }\r\n        );\r\n    } else if (localPlaysDetails.some((play) => play.id === props.playClicked.id)) {\r\n    //Checks if play's details are already in local storage\r\n    console.log(\"Already in local storage!\");\r\n    setPlayDetails(localPlaysDetails.some((play) => play.id === props.playClicked.id));\r\n  } else {\r\n    console.log(\"Play does not contain characters and text!\"); //Add error handler for clickign characters or text!!!!!!\r\n  }\r\n\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    \r\n  }, [playDetails])\r\n\r\n  const [detailsToShow, setDetailsToShow] = React.useState(\"details\");\r\n\r\n  const whatToRender = () => {\r\n    if (detailsToShow === \"characters\") {\r\n      return playDetails.persona.map((p) => (\r\n        <PlayCharacters player={p.player} />\r\n      ));\r\n    } else if (detailsToShow === \"text\") {\r\n      return playDetails.acts.map((p) => <PlayText play={p} />);\r\n    } else {\r\n      return <PlayDetails play={props.playClicked}></PlayDetails>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <aside>\r\n        <h1>{props.playClicked.title}</h1>\r\n        { detailsToShow !== \"text\" ? <h2>{props.playClicked.synopsis}</h2> : null}\r\n        { detailsToShow === \"text\" ? <TextFilter play={playDetails} /> : null}\r\n      </aside>\r\n      <div>\r\n        <button onClick={() => setDetailsToShow(\"details\")}>Details</button>\r\n        <button onClick={() => setDetailsToShow(\"characters\")}>\r\n          Characters\r\n        </button>\r\n        <button onClick={() => setDetailsToShow(\"text\")}>Text</button>\r\n        <div>{whatToRender()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayDetailsMain;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FavoritesContext from \"../../store/favorites-context\";\r\nimport PlayDetailsMain from \"../Details/PlayDetailsMain\";\r\n\r\n/**\r\n* Favourites handler; adds/removes favourites indicator to item\r\n* Expands View Information for item\r\n*/\r\nconst ListOfPlays = (props) => {\r\n  const [viewDetails, setviewDetails] = React.useState(false);\r\n\r\n  const favContext = useContext(FavoritesContext);\r\n  const playIsFav = favContext.playIsFavorite(props.aPlay.id);\r\n\r\n  function toggleFavoriteStatus() {\r\n    if (playIsFav) {\r\n      favContext.deleteFavorite(props.aPlay.id);\r\n    } else {\r\n      favContext.addFavorite(props.aPlay);\r\n    }\r\n  }\r\n  let playClicked = \"\";\r\n\r\n  function handleViewClick(event) {\r\n    setviewDetails(true);\r\n\r\n    playClicked = props.aPlay;\r\n    props.showDetail(props.aPlay);\r\n    // <PlayDetailsMain thePlay={playClicked} />;\r\n  }\r\n  console.log(playClicked);\r\n  if (props.fav === true) {\r\n    return (\r\n      <div className=\"column is-full\">\r\n        <div className=\"card is-primary\" style={{ margin: \"50px 30px\" }}>\r\n          <header className=\"card-header has-background-primary-light\">\r\n            <p className=\"card-header-title is-centered is-6\">\r\n              {props.aPlay.title}\r\n            </p>\r\n          </header>\r\n          <div className=\"card-content\">\r\n            <p className=\"subtitle is-6\">Released: {props.aPlay.likelyDate}</p>\r\n            <p className=\"subtitle is-6\">Genre: {props.aPlay.genre}</p>\r\n          </div>\r\n          <footer className=\"card-footer\">\r\n            <button\r\n              className=\"button card-footer-item is-link\"\r\n              onClick={toggleFavoriteStatus}\r\n            >\r\n              {playIsFav ? \"Remove from Favorites\" : \"Add to Favorites\"}\r\n            </button>\r\n            <button\r\n              className=\" button card-footer-item is-link\"\r\n              onClick={handleViewClick}\r\n            >\r\n              View\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"column is-one-third\">\r\n        <div className=\"card is-primary\" style={{ margin: \"50px 30px\" }}>\r\n          <header className=\"card-header has-background-warning\">\r\n            <p className=\"card-header-title is-centered title is-5\">\r\n              {props.aPlay.title}\r\n            </p>\r\n          </header>\r\n          <div className=\"card-content\">\r\n            <p className=\"subtitle is-6\">Released: {props.aPlay.likelyDate}</p>\r\n            <p className=\"subtitle is-6\">Genre: {props.aPlay.genre}</p>\r\n          </div>\r\n          <footer className=\"card-footer\">\r\n            <button\r\n              className=\"button card-footer-item is-link\"\r\n              onClick={toggleFavoriteStatus}\r\n            >\r\n              {playIsFav ? \"Remove from Favorites\" : \"Add to Favorites\"}\r\n            </button>\r\n            <button\r\n              className=\" button card-footer-item is-link\"\r\n              onClick={handleViewClick}\r\n            >\r\n              View\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ListOfPlays;\r\n","import DefaultView from \"./DefaultView\";\r\nimport ListOfPlays from \"./ListOfPlays\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Sorts array by title, date of release, and genre in ascending order\r\n * Filters array by a year range\r\n */\r\nconst SortPlays = (props) => {\r\n  let list = props.plays;\r\n  let tempList = props.plays;\r\n  let startYear = 0;\r\n  let endYear = 0;\r\n  let yearCond = \"between\";\r\n  const [howToSort, setHowToSort] = React.useState(\"title\");\r\n  const [filter, setFilter] = React.useState([]);\r\n\r\n  //\r\n  const sortChange = (event) => {\r\n    if (event.target.value === \"title\") {\r\n      setHowToSort(\"title\");\r\n    } else if (event.target.value === \"year\") {\r\n      setHowToSort(\"year\");\r\n    } else if (event.target.value === \"genre\") {\r\n      setHowToSort(\"genre\");\r\n    }\r\n  };\r\n\r\n  // Sort array list by play title\r\n  const sortByTitle = () => {\r\n    console.log(\"sort by title\");\r\n    console.log(props.plays);\r\n    const titleSort = props.plays.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    console.log(\"Printing only titles: \");\r\n    console.log(titleSort);\r\n    list = titleSort;\r\n  };\r\n\r\n  // Sorts array list by play likely release date\r\n  const SortByDate = () => {\r\n    console.log(\"sort by date\");\r\n    console.log(props.plays);\r\n    const dateSort = props.plays.sort((a, b) =>\r\n      a.likelyDate > b.likelyDate ? 1 : -1\r\n    );\r\n    console.log(\"Printing only dates: \");\r\n    console.log(dateSort);\r\n    list = dateSort;\r\n  };\r\n\r\n  // Sorts array list by play genre\r\n  const sortByGenre = () => {\r\n    console.log(\"sort by genre\");\r\n    console.log(props.plays);\r\n    const genreSort = props.plays.sort((a, b) => (a.genre > b.genre ? 1 : -1));\r\n    console.log(\"Printing only genres: \");\r\n    console.log(genreSort);\r\n    list = genreSort;\r\n  };\r\n\r\n  // Filters array list based by years\r\n  const handleYearChange = (event) => {\r\n    console.log(\"Year changed...\");\r\n    console.log(event.target.value);\r\n    console.log(event.target.name);\r\n    // let startYear=0;\r\n    // let endYear=0;\r\n\r\n    if (event.target.name === \"start\" && event.target.value !== \"\") {\r\n      startYear = event.target.value;\r\n      console.log(\"startYear: \" + startYear);\r\n    } else if (event.target.name === \"end\" && event.target.value !== \"\") {\r\n      endYear = event.target.value;\r\n      console.log(\"endYear: \" + endYear);\r\n    }\r\n\r\n    if (startYear !== 0 && endYear !== 0) {\r\n      // const betweenYears = props.plays.filter((a) => a.likelyDate >= startYear && a.likelyDate <= endYear);\r\n      // list = betweenYears;\r\n      // tempList = betweenYears;\r\n      yearCond = \"between\";\r\n      howToSort(\"between\");\r\n      // filterYearChange(\"between\", startYear, endYear);\r\n    } else if (startYear !== 0 && endYear === 0) {\r\n      // const afterYear = props.plays.filter((a) => a.likelyDate >= startYear);\r\n      // list = afterYear;\r\n      // tempList = afterYear;\r\n      yearCond = \"after\";\r\n      setHowToSort(\"after\");\r\n      // filterYearChange(\"after\", startYear, endYear);\r\n    } else if (startYear === 0 && endYear !== 0) {\r\n      // const beforeYear = props.plays.filter((a) => a.likelyDate <= endYear);\r\n      // list = beforeYear;\r\n      // tempList = beforeYear;\r\n      yearCond = \"before\";\r\n      setHowToSort(\"before\");\r\n      // filterYearChange(\"before\", startYear, endYear);\r\n    } else {\r\n      // list = props.plays;\r\n      tempList = props.plays;\r\n    }\r\n\r\n    // console.log(\"Printing filtered list: \");\r\n    // console.log(tempList);\r\n\r\n    // return list.map( (plays) => <ListOfPlays aPlay={plays} key={plays.id} />);\r\n  };\r\n\r\n  // Determines if years inputted is a ranged input or for years raning before/after\r\n  const filterYearChange = () => {\r\n    if (yearCond === \"between\") {\r\n      console.log(\"filterYearChange; between...\");\r\n      const betweenYears = props.plays\r\n        .filter((a) => a.likelyDate >= startYear && a.likelyDate <= endYear)\r\n        .map((filteredYear) => tempList.push(filteredYear));\r\n      // props.plays.filter((a) => a.likelyDate >= startYear && a.likelyDate <= endYear).map(filteredYear => tempList.push(filteredYear));\r\n      list = betweenYears;\r\n      console.log(\"Printing filtered list: \");\r\n      // console.log(betweenYears);\r\n      console.log(tempList);\r\n    } else if (yearCond === \"after\") {\r\n      console.log(\"filterYearChange; after...\");\r\n      const afterYear = props.plays\r\n        .filter((a) => a.likelyDate >= startYear)\r\n        .map((filteredYear) => tempList.push(filteredYear));\r\n      // props.plays.filter((a) => a.likelyDate >= startYear).map(filteredYear => tempList.push(filteredYear));\r\n      list = afterYear;\r\n      console.log(\"Printing filtered list: \");\r\n      // console.log(afterYear);\r\n      console.log(tempList);\r\n    } else if (yearCond === \"before\") {\r\n      console.log(\"filterYearChange; before...\");\r\n      const beforeYear = props.plays\r\n        .filter((a) => a.likelyDate <= endYear)\r\n        .map((filteredYear) => tempList.push(filteredYear));\r\n      // props.plays.filter((a) => a.likelyDate <= endYear).map(filteredYear => tempList.push(filteredYear));\r\n      list = beforeYear;\r\n      console.log(\"Printing filtered list: \");\r\n      // console.log(beforeYear);\r\n      console.log(tempList);\r\n    }\r\n  };\r\n\r\n  function genList() {\r\n    if (howToSort === \"title\") {\r\n      sortByTitle();\r\n      // filterByTitle();\r\n      return list.map((plays) => (\r\n        <ListOfPlays\r\n          aPlay={plays}\r\n          key={plays.id}\r\n          showDetail={props.showDetail}\r\n        />\r\n      ));\r\n    } else if (howToSort === \"year\") {\r\n      SortByDate();\r\n      return list.map((plays) => (\r\n        <ListOfPlays\r\n          aPlay={plays}\r\n          key={plays.id}\r\n          showDetail={props.showDetail}\r\n        />\r\n      ));\r\n    } else if (howToSort === \"genre\") {\r\n      sortByGenre();\r\n      return list.map((plays) => <ListOfPlays aPlay={plays} key={plays.id} />);\r\n    } else if (howToSort === \"between\") {\r\n      filterYearChange();\r\n      return list.map((plays) => <ListOfPlays aPlay={plays} key={plays.id} />);\r\n    } else if (howToSort === \"after\") {\r\n      filterYearChange();\r\n      return list.map((plays) => <ListOfPlays aPlay={plays} key={plays.id} />);\r\n    } else if (howToSort === \"before\") {\r\n      filterYearChange();\r\n      return list.map((plays) => (\r\n        <ListOfPlays\r\n          aPlay={plays}\r\n          key={plays.id}\r\n          showDetail={props.showDetail}\r\n        />\r\n      ));\r\n    } else {\r\n      return list.map((plays) => (\r\n        <ListOfPlays\r\n          aPlay={plays}\r\n          key={plays.id}\r\n          showDetail={props.showDetail}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n\r\n  function genList2() {\r\n    console.log(\"genList2: \");\r\n    console.log(tempList);\r\n    return tempList.map((plays) => (\r\n      <ListOfPlays aPlay={plays} key={plays.id} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <label\r\n        className=\"columns select is-primary\"\r\n        style={{ margin: \"50px 20px\", marginLeft: \"-8%\", position: \"fixed\" }}\r\n      >\r\n        Sort by:\r\n        <form onChange={sortChange}>\r\n          <select>\r\n            <option value=\"select\">Select</option>\r\n            <option value=\"title\">Title</option>\r\n            <option value=\"year\">Year</option>\r\n            <option value=\"genre\">Genre</option>\r\n          </select>\r\n        </form>\r\n      </label>\r\n      <label\r\n        className=\"column  is-primary\"\r\n        style={{\r\n          margin: \"200px 20px\",\r\n          marginLeft: \"-9%\",\r\n          position: \"fixed\",\r\n          width: \"10%\",\r\n        }}\r\n      >\r\n        Filter by years:\r\n        <form onChange={handleYearChange}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"start\"\r\n            value={props.filter}\r\n            placeholder=\"Starting Date\"\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"end\"\r\n            value={props.filter}\r\n            placeholder=\"Ending Date\"\r\n          />\r\n        </form>\r\n      </label>\r\n      <div className=\"columns is-multiline\">{genList()}</div>\r\n    </section>\r\n  );\r\n};\r\nexport default SortPlays;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport FavoritesContext from \"../../store/favorites-context\";\r\nimport SortPlays from \"./SortPlays\";\r\nimport ListOfPlays from \"./ListOfPlays\";\r\nimport PlayDetailsMain from \"../Details/PlayDetailsMain\";\r\n\r\n/**\r\n* The main View page\r\n* Return location for other View components\r\n*/\r\nfunction DefaultView(props) {\r\n  /**\r\n  const favContext = useContext(FavoritesContext);\r\n  const playIsFav = favContext.playIsFavorite(props.plays.id);\r\n\r\n  function toggleFavoriteStatus(event) {\r\n    console.log(event);\r\n    if (playIsFav) {\r\n      favContext.deleteFavorite(props.plays.id);\r\n    } else {\r\n      favContext.addFavorite(props.plays.id);\r\n    }\r\n  }\r\n*/\r\n\r\n  return (\r\n    <div>\r\n      <SortPlays plays={props.plays} key={props.plays.id} showDetail={props.showDetail}></SortPlays>\r\n    </div>\r\n  );\r\n}\r\nexport default DefaultView;\r\n\r\n{/* <button>Title</button>\r\n      <button>Year</button> */}\r\n","import { useContext } from \"react\";\r\nimport FavoritesContext from \"../store/favorites-context\";\r\nimport ListOfPlays from \"./Default/ListOfPlays\";\r\n\r\n/**\r\n* Favourites list builder; where all favourite items are stored\r\n*/\r\nfunction FavoritesBar() {\r\n  const favContext = useContext(FavoritesContext);\r\n\r\n  let content;\r\n  if (favContext.favorites.length < 1) {\r\n    content = (\r\n      <p\r\n        className=\"has-text-weight-bold\"\r\n        style={{ color: \"black\", marginLeft: \"5%\" }}\r\n      >\r\n        Favorite List is Empty. Not a Shakes fan, eh?\r\n      </p>\r\n    );\r\n  } else {\r\n    content = favContext.favorites.map((plays) => {\r\n      return <ListOfPlays aPlay={plays} key={plays.id} fav={true} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section className=\"columns is-multiline\">\r\n      <p\r\n        className=\"title column is-full\"\r\n        style={{ color: \"black\", marginLeft: \"5%\" }}\r\n      >\r\n        My Favorites\r\n      </p>\r\n      {content}\r\n    </section>\r\n  );\r\n}\r\nexport default FavoritesBar;\r\n","import React from \"react\";\r\nimport Home from \"./Components/Home/Home\";\r\nconst About = () => {\r\n  const [hideModal, sethideModal] = React.useState(false);\r\n\r\n  function toggleModalHandler() {\r\n    sethideModal(true);\r\n  }\r\n  if (hideModal === false) {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">About Us</p>\r\n            <button\r\n              className=\"delete\"\r\n              aria-label=\"close\"\r\n              onClick={toggleModalHandler}\r\n            ></button>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <p className=\"is-4\">Hi There!</p>\r\n            <br />\r\n            <p>\r\n              It's nice to meet you! This is our WEB 3 Assignment 1. It was\r\n              focused on React. We learned how to use create-react-app to build\r\n              a simple <strong>Web App.</strong> Some of the feautures include:\r\n              API fetch request, context provider, useState, CSS framework\r\n              (Bulma), and much more!\r\n            </p>\r\n            <br></br>\r\n            <p>\r\n              By:\r\n              <strong> Micheal Sujanto, Ahmed Thraya, Justin Przybylski</strong>\r\n            </p>\r\n          </section>\r\n          <footer className=\"modal-card-foot\">\r\n            <button className=\"button is-danger\" onClick={toggleModalHandler}>\r\n              Close\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Home />;\r\n  }\r\n};\r\nexport default About;\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport Slider from \"react-slide-out\";\r\nimport \"react-slide-out/lib/index.css\";\r\nimport { render } from \"react-dom\";\r\nimport FavoritesBar from \"./FavoritesBar\";\r\n\r\n/**\r\n* Header bar\r\n*/\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar is-link is-fixed-top mx-* \"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          <div className=\"navbar-item\">\r\n            <Link className=\"has-text-white ml-6\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </div>\r\n          <button\r\n            role=\"button\"\r\n            className=\"navbar-burger\"\r\n            data-target=\"navMenu\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n        <div className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n            <div className=\"navbar-item\">\r\n              <Link className=\"has-text-white\" to=\"/default\">\r\n                Default View\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              <Link className=\"has-text-white\" to=\"/about\">\r\n                About Us\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"navbar-item\">\r\n              <button\r\n                className=\"button is-light\"\r\n                onClick={() => this.setState({ isOpen: true })}\r\n              >\r\n                My Favorites\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"navbar-item mr-6\">\r\n              <Slider\r\n                footer={\r\n                  <div className=\"buttons\" style={{ padding: \"15px\" }}>\r\n                    <button\r\n                      className=\"button is-dark\"\r\n                      onClick={() => this.setState({ isOpen: false })}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                }\r\n                isOpen={this.state.isOpen}\r\n                onOutsideClick={() => this.setState({ isOpen: false })}\r\n              >\r\n                <FavoritesBar />\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport FavoritesContext from \"../../store/favorites-context\";\r\nimport PlayDetailsMain from \"../Details/PlayDetailsMain\";\r\n\r\n/**\r\n* Toggles favourites, add item to favourites list\r\n*/\r\nconst SinglePlay = (props) => {\r\n  const [viewDetails, setviewDetails] = React.useState(false);\r\n  const [viewSingle, setViewSingle] = React.useState(true);\r\n  const favContext = useContext(FavoritesContext);\r\n  const playIsFav = favContext.playIsFavorite(props.single.id);\r\n\r\n  // Add/Remove plays to favourites list\r\n  function toggleFavoriteStatus() {\r\n    if (playIsFav) {\r\n      favContext.deleteFavorite(props.single.id);\r\n    } else {\r\n      favContext.addFavorite(props.single);\r\n    }\r\n  }\r\n\r\n  // \r\n  function handleViewClick(event) {\r\n    setViewSingle(false);\r\n    setviewDetails(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"column is-full\">\r\n      <div className=\"card has-shadow\" style={{ margin: \"20%\" }}>\r\n        <header className=\"card-header\">\r\n          <p className=\"card-header-title is-centered title is-6\">\r\n            {props.single.title}\r\n          </p>\r\n        </header>\r\n        <div className=\"card-content\">\r\n          <p className=\"subtitle is-6\">Released: {props.single.likelyDate}</p>\r\n          <p className=\"subtitle is-6\">Genre: {props.single.genre}</p>\r\n        </div>\r\n        <footer className=\"card-footer\">\r\n          <button\r\n            className=\"button card-footer-item is-link\"\r\n            onClick={toggleFavoriteStatus}\r\n          >\r\n            {playIsFav ? \"Remove from Favorites\" : \"Add to Favorites\"}\r\n          </button>\r\n\r\n          <button\r\n            className=\" button card-footer-item is-link\"\r\n            onClick={handleViewClick}\r\n          >\r\n            View\r\n          </button>\r\n        </footer>\r\n\r\n        {viewDetails ? <PlayDetailsMain thePlay={props.single} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SinglePlay;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { FavoritesContextProvider } from \"./store/favorites-context\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport PlayDetailsMain from \"./Components/Details/PlayDetailsMain\";\r\nimport DefaultView from \"./Components/Default/DefaultView\";\r\nimport FavoritesBar from \"./Components/FavoritesBar\";\r\nimport About from \"./About\";\r\nimport Header from \"./Components/Header\";\r\nimport SinglePlay from \"./Components/Default/SinglePlay\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      title: \"\",\r\n      singlePlay: [],\r\n      playClicked: [],\r\n      hideModal: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem.length <= 1) {\r\n      fetch(\r\n        \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\"\r\n      )\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            result.sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n            console.log(result);\r\n\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result,\r\n            });\r\n            let testResult = JSON.stringify(result);\r\n            localStorage.setItem(\"plays\", testResult);\r\n          },\r\n\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error,\r\n            });\r\n          }\r\n        );\r\n    } else {\r\n      this.setState({ isLoaded: true });\r\n      console.log(\"Plays are loaded in storage!\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { error, isLoaded, items } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...{}</div>;\r\n    } else {\r\n      localStorage.setItem(\"plays\", items);\r\n    }\r\n\r\n    const showDetail = (play) => {\r\n      this.setState({ playClicked: play });\r\n    };\r\n    const hideModal = () => {\r\n      this.setState({ hideModal: true });\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<Home onUpdateTitle={this.onUpdateTitle.bind(this)} />}\r\n            exact\r\n          ></Route>\r\n          <Route\r\n            path=\"/default\"\r\n            element={\r\n              <DefaultView plays={this.state.items} showDetail={showDetail} />\r\n            }\r\n          ></Route>\r\n\r\n          <Route\r\n            path=\"/singlePlay\"\r\n            element={<SinglePlay single={this.state.singlePlay} />}\r\n          ></Route>\r\n\r\n          <Route\r\n            path=\"/details\"\r\n            element={<PlayDetailsMain playClicked={this.state.playClicked} />}\r\n          ></Route>\r\n          <Route path=\"/favorites\" element={<FavoritesBar />}></Route>\r\n          <Route\r\n            path=\"/about\"\r\n            element={<About hideModal={hideModal} />}\r\n          ></Route>\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onUpdateTitle(userTitle) {\r\n    this.setState({ title: userTitle });\r\n    const singlePlayIndex = this.state.items.findIndex(\r\n      (p) => p.title.toLowerCase() === userTitle\r\n    );\r\n    this.setState({ singlePlay: this.state.items[singlePlayIndex] });\r\n    return singlePlayIndex;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { FavoritesContextProvider } from \"./store/favorites-context\";\r\n\r\nReactDOM.render(\r\n  <FavoritesContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </FavoritesContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}